/// <reference types="node" />
import { ObservableInterface } from "@hibas123/utils";
import { Adapter, Message } from "@hibas123/logging";
export declare class LoggingFiles implements Adapter {
    private filename;
    private error;
    private maxFileSize;
    private noPrefix;
    file: Files;
    constructor(filename: string, error?: boolean, maxFileSize?: number, noPrefix?: boolean);
    init(observable: ObservableInterface<Message>): Promise<void>;
    flush(sync: boolean): void;
    onMessage(message: Message): void;
    close(): void;
}
export declare class Files {
    private file;
    private open;
    private static files;
    static getFile(filename: string): Files;
    private maxFileSize;
    private size;
    private stream;
    private lock;
    private $initialized;
    get initlialized(): boolean;
    private constructor();
    init(maxFileSize: number): Promise<void>;
    private initializeFile;
    private queue;
    checkQueue(): Promise<void>;
    close(): Promise<void>;
    flush(sync: boolean): Promise<void>;
    private write_to_file;
    write(data: Buffer): void;
    dispose(): void;
}
